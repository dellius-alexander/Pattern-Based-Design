plugins {
    id 'java-library'
    id 'application'
}

group 'org.example'
version '0.1.1'

compileJava {
    options.compilerArgs.addAll(['-Xlint'])
    options.deprecation = true
}

dependencies {
    // Logging dependencies
    compileOnlyApi 'org.slf4j:slf4j-api:2.0.3'
    runtimeClasspath 'ch.qos.logback:logback-classic:1.4.4'
    // test dependencies
    compileOnlyApi 'org.junit.jupiter:junit-jupiter-api:5.9.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.0'
    // lombok annotations  dependencies is for boilerplate code generation
    implementation 'org.projectlombok:lombok:1.18.24'
    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'
    testCompileOnly 'org.projectlombok:lombok:1.18.24'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'
}

test {
    useJUnitPlatform()
}


javadoc {
    source = sourceSets.main.java
}

// Project and System properties
task propertyTypes(){
    doLast{
        if (project.hasProperty("args")) {
            println javaMainClass + " - Project input arguments: ["
            project.getProperty("args").each { arg ->
                println arg
            }
            println "]"
        }

        if (System.getProperty("args")) {
            println javaMainClass +" - System input arguments: ["
            System.getProperty("args").each { arg ->
                println arg
            }
            println "]"
        }
    }
}